version: '3'

services:
  db:
    image: mongo:latest
    ports:
      - '27017:27017'
    command: mongod --bind_ip 0.0.0.0 --smallfiles

  client:
    container_name: interview_client
    restart: on-failure
    build:
      context: ../../packages/client
      dockerfile: ./Dockerfile
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    env_file:
      - ../../.env
    environment:
      - NODE_ENV=production
    networks:
      - default
    command: ['nginx', '-g', 'daemon off;']
    labels:
      - 'traefik.docker.network=web'
      - 'traefik.enable=true'
      - 'traefik.domain=winnersnevers.top'
      - 'traefik.basic.frontend.rule=Host:winnersnevers.top'
      - 'traefik.basic.port=80'
      - 'traefik.basic.protocol=http'
      - 'traefik.frontend.headers.SSLRedirect=true'
      - 'traefik.frontend.headers.STSSeconds=315360000'
      - 'traefik.frontend.headers.browserXSSFilter=true'
      - 'traefik.frontend.headers.contentTypeNosniff=true'
      - 'traefik.frontend.headers.forceSTSHeader=true'
      - "traefik.frontend.headers.contentSecurityPolicy=default-src 'self';frame-ancestors 'self';style-src 'self';script-src 'self';img-src 'self';font-src 'self'"
      - 'traefik.frontend.headers.referrerPolicy=no-referrer'
      - 'traefik.frontend.headers.frameDeny=true'

  server:
    container_name: interview_api
    restart: on-failure
    image: node:8
    build:
      context: ../../packages/server
      dockerfile: ./Dockerfile
    env_file:
      - ../../.env
    environment:
      - NODE_ENV=production
    ports:
      - '3000:3000'
    networks:
      - default
    command: ['npm', run', 'serve']
    labels:
      - 'traefik.docker.network=web'
      - 'traefik.enable=true'
      - 'traefik.domain=api.winnersnevers.top'
      - 'traefik.basic.frontend.rule=Host:api.winnersnevers.top'
      - 'traefik.basic.port=3000'
      - 'traefik.basic.protocol=http'
